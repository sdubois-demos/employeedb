openapi: 3.0.3
info:
  title: Employee API
  description: API for managing employees
  version: 1.0.0

servers:
  - url: https://edb.apps.fortidemo.net
  - url: https://edb.apps-int.fortidemo.net

paths:
  /api/employees:
    get:
      summary: Get all employees
      operationId: getAllEmployees
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
          description: Maximum number of employees to return
        - name: offset
          in: query
          required: false
          schema:
            type: integer
          description: Number of employees to skip before returning results
        - name: sort_by
          in: query
          required: false
          schema:
            type: string
            enum: [id, firstName, lastName, email, -id, -firstName, -lastName, -email]
          description: Field to sort by. Prefix with '-' for descending order.
      responses:
        '200':
          description: A list of employees
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'

    post:
      summary: Create new employees
      operationId: createEmployees
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Employee'
      responses:
        '201':
          description: Employees created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'

    delete:
      summary: Delete all employees
      operationId: deleteAllEmployees
      responses:
        '204':
          description: All employees deleted

  /api/employee/{id}:
    get:
      summary: Get an employee by ID
      operationId: getEmployeeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Employee details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '404':
          description: Employee not found

    put:
      summary: Update an existing employee
      operationId: updateEmployee
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
      responses:
        '200':
          description: Employee updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
        '404':
          description: Employee not found

    delete:
      summary: Delete an employee
      operationId: deleteEmployee
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Employee deleted
        '404':
          description: Employee not found

components:
  schemas:
    Employee:
      type: object
      properties:
        id:
          type: integer
          example: 1
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        email:
          type: string
          format: email
          example: john.doe@example.com
